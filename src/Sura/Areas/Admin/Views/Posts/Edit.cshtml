@using Sura.Areas.Admin.Helpers
@using Sura.Areas.Admin.Infrastructure
@using Sura.Areas.Admin.Views.Posts.Models
@model Edit
@{
    ViewBag.Title = "Edit '" + Model.Title + "'";
}
@section stylesheets
{
    <link rel="stylesheet" href="@Url.Content("~/Content/Stylesheets/Sura/sura-admin-posts.css")" />
}
@section javascripts 
{
    <script src="@Url.Content("~/Content/Javascripts/Sura/sura-admin-posts.min.js")"></script>
    @{
        <script type="text/javascript">
            $(document).ready(function () {         
                $('#Tags').tagInput();
                
                var scheduler = $('span#schedule-datetimepicker').hide();
                $('#ScheduleFor').datetimepicker({
                    showOn: 'button',
                    buttonImage: '@Url.Content("~/Content/Images/Sura/scheduler/calendar.gif")',
                    buttonImageOnly: true,
                    dateFormat: 'dd/mm/yy',
                    minDate: new Date()
                });
                
                @if (Model.Availability == Availability.Scheduled)
                {
                    @:scheduler.show();
                }                

                $('#Availability').change(function () {
                    if ($(this).val() == '@Availability.Scheduled') {
                        scheduler.show();
                        $('.ui-datepicker-trigger').click();
                    }
                    else {
                        scheduler.hide();
                    }
                });
            });
        </script>
      }
}

<section class="span12 columns">
<h1>Edit - '@Model.Title'</h1>

@if (@ViewBag.Success == true)
{
<div class="alert alert-success">
	<a data-dismiss="alert" class="close">&times;</a>
	The post was successfully updated.
</div>
}

@using (Html.BeginForm("Edit", "Posts", FormMethod.Post, new { @class = "form-horizontal", autocomplete = "off" }))
{
  @Html.ValidationSummary() 
  @Html.HiddenFor(model => model.Id)
    
  <fieldset class="panel">
    <legend>Post Content</legend>

    <div class="control-group">   
      <label class="control-label" for="Title">Title</label>
      <div class="controls">
        @Html.TextBoxFor(model => model.Title, new { @class = "input-xlarge" })
        <p class="help-block">The title will also become to the slug used in the post url.</p>
      </div>
    </div>

    <div class="control-group">   
      <label class="control-label" for="Tags">Tags</label>
      <div class="controls">
        @Html.TextBoxFor(model => model.Tags)
        <p class="help-block">Tags associate posts with their content. Separate tags with commas.</p>
      </div>
    </div>

    <div class="control-group">   
      <label class="control-label" for="Body">Content</label>
      <div class="controls">
        @Html.TextAreaFor(model => model.Body, new { @class = "body" })
      </div>
    </div>
  </fieldset>    
    
  <fieldset class="panel">
    <legend>SEO</legend>
   
    <div class="control-group">   
      <label class="control-label" for="Description">Description</label>
      <div class="controls">
        @Html.TextAreaFor(model => model.Description, new { @class = "description" })
      </div>
    </div>
  </fieldset>    
     
    
  <fieldset class="panel row">
    <legend>Settings</legend>

    <div class="control-group">   
      <label class="control-label" for="Availability">Availability</label>
      <div class="controls">
        @Html.EnumDropDownListFor(model => model.Availability, new { @class = "span2" })
        <span id="schedule-datetimepicker">
          <label for="ScheduleFor">Select a time and date:</label>
          <input id="ScheduleFor" name="ScheduleFor" type="text" value="" disabled />
        </span>
      </div>
    </div>

     <div class="control-group">   
      <label class="control-label" for="EnableComments">Comments</label>
      <div class="controls">
        @Html.EnumDropDownListFor(model => model.EnableComments, new { @class = "span2" })
      </div>
    </div>
  </fieldset>
  
  <div class="span3">
    <input type="submit" value="Update Post" class="btn btn-primary" />
  </div>
  <div class="sub-buttons span9">
@if (Model.IsTrashed)
{
    @:<p>This post is currently in the trash, saving it will remove it from the trash and place it according to the 'availability' selection above.</p>
}
else
{
    @Ajax.ActionLink("Trash", "Trash", new { slug = @Model.Slug }, new AjaxOptions { HttpMethod = "POST", Confirm = "Are you sure you want to trash this post?",
    OnSuccess = "redirect('" + @UrlHelper.GenerateUrl(null, "List", "Posts", null, null, "trashed", null, Url.RouteCollection, Url.RequestContext, false) + "')"}, new { @class = "btn btn-warning" })
} 

    @Ajax.ActionLink("Permanently Delete", "Delete", new { slug = @Model.Slug }, 
      new AjaxOptions { HttpMethod = "DELETE", Confirm = "Are you sure you want to delete this post? It will not be retrievable.",
                        OnSuccess = "redirect('" + @Url.Action("List", "Posts") + "')"}, new { @class = "btn btn-danger" })
  </div>
}

</section>